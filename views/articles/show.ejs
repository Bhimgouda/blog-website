<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title><%= article.seoTitle || article.title %></title>
    <meta name="description" content="<%= article.description %>" />
    <!-- <meta name="keywords" content="<%= article.keywords %>" /> -->

    <!-- Twitter social cards -->
    <meta name="twitter:card" content="<%= article.seoTitle || article.title %>">
    <meta name="twitter:title" content="<%= article.seoTitle || article.title %>">
    <meta name="twitter:description" content="<%= article.description %>">
    <meta name="twitter:image" content="<%= article.heroImage %>">

    <!-- Linkedin social cards -->
    <meta property="og:title" content="<%= article.seoTitle || article.title %>">
    <meta property="og:description" content="<%= article.description %>">
    <meta property="og:image" content="<%= article.heroImage %>">
    <meta property="og:url" content="blockmate.com">
    <meta property="og:type" content="article">

    <link rel="stylesheet" href="<%= css %>" />
  </head>
  <body>
    
    <%- include('../partials/flash')%>
    <%- include('../partials/navbar')%>
    
    <% if(currentAuthor &&
    currentAuthor._id.equals(article.author._id)){ %>
    <a href="/articles/<%= article.slug %>/edit">
      <button style="border-radius: 0; border: none;" class="btn btn--filled">
        Edit Article
      </button>
    </a>
    <% } %>

    <div class="article__header">
      
      <div class="article__bg-image">
        <img loading="lazy" src="<%= article.heroImage  %>" alt="" />
      </div>
      <div class="article__info">
        <a
          class="tags tags--filled tags--big"
          href="/categories/<%= article.category._id %>"
          ><%=article.category.title%></a>
        <h1 class="article__title"><%= article.title %></h1>
        <span class="article__tagline"><%= article.tagline %></span>
      </div>
    </div>
    <article class="article__body">
      <div class="article__layout">

      <div class="author-box--desktop">
        <div class="author sticky-container">
          <img loading="lazy" class="author__image" src="/images/pragat.webp" alt="">
          <div class="author__info">
            <p class="author__name"><%=article.author.name%></p>
            <span class="author__about line-clamp-2">Blockchain, Crypto and Web 3 writer. Connect with me if you are looking to elevate your content game.</span>
             <% if(article.dateLastUpdated){ %>
            <p class="publish-date"> Updated on <%= article.dateLastUpdated %>
            <%}else{%>
            <p class="publish-date">Published on <%= article.datePublished %></p>
            <%}%>
            <div class="views-and-likes">
              <span class="views">
              Reads: <span id="views-count"><%=article.reads%></span>
              </span>
              <div class="likes">
                <img loading="lazy" style="width: 20px;" src="/images/heart-svgrepo-com.svg" alt="">
                <span>Like</span>
                <span class="likes-count"><%= article.likes %></span>
              </div>
    </div>
          </div>
       </div>
      </div>

        <div class="article">
          <img
            class="article__heroImage"
            src="<%= article.heroImage%>"
            alt=""
          />
          <%- article.content%>
          
          <div id="author-box" class="author-box--mobile">
            <div class="author">
              <img loading="lazy" class="author__image" src="https://media.licdn.com/dms/image/D4D03AQHd6LmaX_AL-g/profile-displayphoto-shrink_400_400/0/1673347814750?e=1680134400&v=beta&t=amDenRkzAQirxXdvIpikH3PGsrXDieGommkK7QNj4Ak" alt="">
              <div class="author__info">
                <% if(article.dateLastUpdated){ %>
                <p class="publish-date"> Updated on <%= article.dateLastUpdated %>
                <%}else{%>
                <p class="publish-date">Published on <%= article.datePublished %></p>
                <%}%>
                <p class="author__name"><%=article.author.name%></p>
                <span class="author__about line-clamp-2">Blockchain, Crypto and Web 3 writer. Connect with me if you are looking to elevate your content game.</span>
              </div>
            </div>
          </div>
        </div>

        <sidebar>
          <%- include('../partials/sidebar')%>
        </sidebar>

      </div>
    </article>

    <div class="views-and-likes views-and-likes--mobile">
              <span class="views">
              Reads: <span id="views-count"><%=article.reads%></span>
              </span>
              <div class="likes">
                <img loading="lazy" style="width: 20px;" src="/images/heart-svgrepo-com.svg" alt="">
                <span>Like</span>
                <span class="likes-count"><%= article.likes %></span>
              </div>
    </div>
    
    <%- include('../partials/footer')%>


    <script>
      const toggle = document.querySelector(".nav__burger");
      const navLinks = document.querySelector(".nav__links")

      window.addEventListener("scroll", ()=>{
        toggle.classList.remove("nav__burger--close")
        navLinks.classList.remove("nav__links--expanded")
        setActiveToc()
      })

      toggle.addEventListener("click", ()=>{
        toggle.classList.toggle("nav__burger--close")
        navLinks.classList.toggle("nav__links--expanded")
      })


      // To dissapear flash after 2-3 seconds
      const flash = document.querySelector(".flash")

      setTimeout(()=>{
        if(flash) flash.style.display = 'none'
      },2000)

      // Checking for item Visiblity using async observer (author-box here)

      const author = document.querySelector(".author-box--mobile .author")

      var authorBoxObserver = new IntersectionObserver(function(entries) {
          // isIntersecting is true when element and viewport are overlapping
          // isIntersecting is false when element and viewport don't overlap
          if(entries[0].isIntersecting === true)
            if(author){
              author.classList.add('author--slide-in')
            }
        }, { threshold: [1] }); // 0 for entry and 11 for full visible

        authorBoxObserver.observe(document.querySelector("#author-box"));

      // For Like Button There are 2 like btns (for styling purposes) for both mobile and pc 
      const likeBtns = document.querySelectorAll(".likes")
      const likeCount = document.querySelectorAll('.likes-count')
      let liked = JSON.parse('<%= liked %>')

      // For initial state when the page loads 
      
      likeBtns.forEach((likeBtn,i)=>{
        if(liked) likeBtn.style.backgroundColor = 'red';
        likeBtn.addEventListener("click", async()=>{
          if(liked){
          likeBtn.style.backgroundColor = 'black'
          likeCount[i].textContent --;
          liked = false
        }
        else{
          likeBtn.style.backgroundColor = 'red'
          likeCount[i].textContent ++;
          liked = true;
        }
        // To change the data in db
        await fetch(`/articles/<%= article.slug %>/like`)
        })
      })

      // For sidebar functionality
        const headings = document.querySelectorAll("h2,h3");
        const tocLinks = document.querySelectorAll(".toc__content")
        const toc = document.getElementById("toc")

        headings.forEach((heading,index) => {
          heading.setAttribute("id", `heading-${index}`);
          // articleHeadingObserver.observe(heading)
        });

        tocLinks.forEach(link=>{
          link.addEventListener("click", (e)=>{
            e.target.dataset.toc
            headings.forEach(heading=>{
              if(e.target.dataset.toc === heading.id){
                return heading.scrollIntoView({behavior: "smooth"})
              }
            })
          })
        })


      // To set active TOC link based on respective heading on scroll
      function setActiveToc() {
        let activeHeading = null;
        headings.forEach((heading) => {
          if (heading.getBoundingClientRect().top < 150 && heading.getBoundingClientRect().top > -150) {
            activeHeading = heading;
          }
        });
        if (!activeHeading) {
          return;
        }
        const activeLink = toc.querySelector(`[data-toc="${activeHeading.id}"]`);
        activeLink.classList.add("toc__content--active");
        // Remove the active class from all other links
        const tocLinks = toc.querySelectorAll(".toc__content");
        tocLinks.forEach((link) => {
          if (link !== activeLink) {
            link.classList.remove("toc__content--active");
          }
        });
      };  
    </script>
  </body>
</html>
